--drop database Minions

use Minions
create table Minions 
(
	Id int not null primary key,
	[Name] char,
	Age int
);

create table Towns
(
	Id int not null primary key,
	[Name] char
);

alter table Minions
add TownId int not null;

alter table Minions 
add foreign key (TownId) references Towns(Id);

drop table Minions;
drop table Towns;

use Minions
create table Minions 
(
	Id int not null primary key,
	[Name] varchar(1000),
	Age int
);

use Minions
create table Towns
(
	Id int not null primary key,
	[Name] varchar(1000)
);

alter table Minions
add TownId int not null;

use Minions
alter table Minions 
add foreign key (TownId) references Towns(Id);


use Minions

insert into Towns(Id, [Name])
values (1, 'Sofia'),
	   (2, 'Plovdiv'),
	   (3, 'Varna');

insert into Minions (Id, [Name], Age, TownId)
values (1, 'Kevin', 22, 1),
	   (2, 'Bob', 15, 3),
	   (3, 'Steward', null, 2);
	   
truncate table Minions

drop table Minions
drop table Towns

create table People
(
	Id int not null primary key IDENTITY,
	[Name] nvarchar(200) not null,
	Picture image,
	Height float(2),
	[Weight] float(2),
	Gender varchar(1) not null check (Gender IN('m', 'f')),
	Birthdate datetime not null,
	Biography ntext
);

insert into People 
values ('Name1', '/some/path/image.png', null, 2, 'm', 1-1-1999, 'Biography'),
	   ('Name2', '/some/path/image.png', null, 2, 'm', 1-1-1999, 'Biography'),
	   ('Name3', '/some/path/image.png', null, 2, 'm', 1-1-1999, 'Biography'),
	   ('Name4', '/some/path/image.png', null, 2, 'm', 1-1-1999, 'Biography'),
	   ('Name5', '/some/path/image.png', null, 2, 'm', 1-1-1999, 'Biography');
	   
create table Users
(
	Id bigint not null primary key identity,
	Username varchar(30) not null unique,
	Password varchar(26) not null,
	ProfilePicture image,
	LastLoginTime datetime,
	IsDeleted varchar(5) not null check (IsDeleted IN('true', 'false')),
);

insert into Users
values ('Username1', '123', '/some/path/image.png', 1-1-1999, 'true'),
	   ('Username2', '123', '/some/path/image.png', 1-1-1999, 'true'),
	   ('Username3', '123', '/some/path/image.png', 1-1-1999, 'true'),
	   ('Username4', '123', '/some/path/image.png', 1-1-1999, 'true'),
	   ('Username5', '123', '/some/path/image.png', 1-1-1999, 'true');
	   
use Minions
alter table Users 
drop constraint [PK__Users__3214EC07CE043FF4];

use Minions 
alter table Users 
add constraint [composite_key]
primary key (Id, Username)

alter table Users 
add constraint [check] 
check (len([Password]) >= 5);


use Minions
drop table Users

 use Minions
 create table Users
(
	Id bigint not null primary key identity,
	Username varchar(30) not null unique,
	Password varchar(26) not null check (len([Password]) >= 5),
	ProfilePicture image,
	LastLoginTime datetime,
	IsDeleted varchar(5) not null check (IsDeleted IN('true', 'false')),
);

use Minions 
alter table Users
add constraint df_lastLoginTime
default GETDATE() for LastLoginTime;

use Minions 
alter table Users
drop constraint [PK__Users__3214EC07B8F558C1];

use Minions 
alter table Users
add primary key(Id);

use Minions
alter table Users
add constraint ch_username check (len(Username) >= 3)

use Movies
create table Directors
(
	Id bigint not null primary key identity,
	DirectorName varchar(50) not null,
	Notes ntext
);

use Movies
insert into Directors
values ('Name1', 'notes'),
	   ('Name2', 'notes'),
	   ('Name3', 'notes'),
	   ('Name4', 'notes'),
	   ('Name5', 'notes');
	   
use Movies
create table Genres
(
	Id bigint not null primary key identity,
	GenreName varchar(50) not null,
	Notes ntext
);

use Movies
insert into Genres
values ('Name1', 'notes'),
	   ('Name2', 'notes'),
	   ('Name3', 'notes'),
	   ('Name4', 'notes'),
	   ('Name5', 'notes');
	   
use Movies
create table Categories 
(
	Id bigint not null primary key identity,
	CategoryName varchar(50) not null,
	Notes ntext
);

use Movies
insert into Categories
values ('Name1', 'notes'),
	   ('Name2', 'notes'),
	   ('Name3', 'notes'),
	   ('Name4', 'notes'),
	   ('Name5', 'notes');
	   
use Movies
create table Movies 
(
	Id bigint not null primary key identity,
	Title varchar(50) not null,
	DirectorId bigint not null,
	CopyrightYear datetime not null,
	[Length] int not null,
	GenreId bigint,
	CategoryId bigint,
	Rating tinyint,
	Notes ntext
);

use Movies
insert into Movies
values ('Title1', 123, 1-1-1999, 120, 123, 456, 4, 'notes'),
	   ('Title2', 123, 1-1-1999, 120, 123, 456, 4, 'notes'),
	   ('Title3', 123, 1-1-1999, 120, 123, 456, 4, 'notes'),
	   ('Title4', 123, 1-1-1999, 120, 123, 456, 4, 'notes'),
	   ('Title5', 123, 1-1-1999, 120, 123, 456, 4, 'notes');



